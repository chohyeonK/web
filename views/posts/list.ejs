<div class="my-5">
    <h1 class="text-center mb-5">게시판</h1>
    <div class="row">
        <div class="col">
            게시글수: <span id ="total">0</span>
        </div>
        <div class="col text-end">
            <button id="btn-insert" class="btn btn-primary">글쓰기</button>
        </div>
    </div>

    <hr />
    <div id="div_posts"></div>
    <div class="text-center">
        <buton id="prev" class="btn btn-primary btn-sm">이전</buton>
        <span id="page">0/0</span>
        <buton id="next" class="btn btn-primary btn-sm">다음</buton>
    </div>
</div>

<script id="temp_posts" type="x-handlebars-template">
    <table class="table">
        {{#each .}}
            <tr>
                <td>{{title}}</td>
                <td>{{date}}</td>
                <td>{{email}}</td>
            </tr>    
        {{/each}}
    </table>
</script>

<script type="module">
    import { app } from "/javascripts/firebase.js";
    import { getFirestore,collection } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    import { query,orderBy,getDocs,where,doc } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    const db = getFirestore(app);
    const email=sessionStorage.getItem('email');

    let page = 1;
    let last = 1;
    let size = 3;

    getPosts();

    $("#next").on("click", function(){
        page++;
        getPosts();
    });

    
    $("#prev").on("click", function(){
        page--;
        getPosts();
    });

    async function getPosts() {
        const q = query(collection(db, 'posts'), orderBy("date", "desc"));
        const snapshot = await getDocs(q);
        // console.log('snapshot', snapshot.docs);

        let rows = [];
        const total = snapshot.docs.length;
        last = Math.ceil(total/size);
        $("#page").html(`${page} / ${last}`);
        $("#total").html(total);

        snapshot.docs.forEach((doc, index) => {
            // console.log('index', index);
            // console.log('doc.data', doc.id, doc.data());

            const start = (page-1)*size;
            const end = (page*size)-1;

            if(index >= start && index <= end){
                const row = {id : doc.id, ...doc.data()};
                rows.push(row);
            }
        })

        const temp = Handlebars.compile($("#temp_posts").html());
        $("#div_posts").html(temp(rows));

        console.log('page', page);

        if(page == 1) {
            console.log('여기', );
            $("#prev").attr("disabled", true);
        }
        else{
            $("#prev").attr("disabled", false);
        }

        if(page == last) {
            $("#next").attr("disabled", true);
        }else{
            $("#next").attr("disabled", false);
        } 
    }

    $("#btn-insert").on("click", function() {
        if (sessionStorage.getItem("uid")) {
            // 로그인이 되어 있는 상태
            location.href = "/posts/insert";
        } else {
            sessionStorage.setItem("target", "/posts/insert")
            location.href = "/users/login";
        }
    });
</script>